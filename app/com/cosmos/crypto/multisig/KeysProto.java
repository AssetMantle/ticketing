// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/crypto/multisig/keys.proto

package com.cosmos.crypto.multisig;

public final class KeysProto {
  private KeysProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_crypto_multisig_LegacyAminoPubKey_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_crypto_multisig_LegacyAminoPubKey_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!cosmos/crypto/multisig/keys.proto\022\026cos" +
      "mos.crypto.multisig\032\024gogoproto/gogo.prot" +
      "o\032\031google/protobuf/any.proto\"\243\001\n\021LegacyA" +
      "minoPubKey\0222\n\tthreshold\030\001 \001(\rB\024\362\336\037\020yaml:" +
      "\"threshold\"R\tthreshold\022T\n\013public_keys\030\002 " +
      "\003(\0132\024.google.protobuf.AnyB\035\342\336\037\007PubKeys\362\336" +
      "\037\016yaml:\"pubkeys\"R\npublicKeys:\004\210\240\037\000B\324\001\n\032c" +
      "om.cosmos.crypto.multisigB\tKeysProtoP\001Z1" +
      "github.com/cosmos/cosmos-sdk/crypto/keys" +
      "/multisig\242\002\003CCM\252\002\026Cosmos.Crypto.Multisig" +
      "\312\002\026Cosmos\\Crypto\\Multisig\342\002\"Cosmos\\Crypt" +
      "o\\Multisig\\GPBMetadata\352\002\030Cosmos::Crypto:" +
      ":Multisigb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.gogoproto.GogoProto.getDescriptor(),
          com.google.protobuf.AnyProto.getDescriptor(),
        });
    internal_static_cosmos_crypto_multisig_LegacyAminoPubKey_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_cosmos_crypto_multisig_LegacyAminoPubKey_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_crypto_multisig_LegacyAminoPubKey_descriptor,
        new java.lang.String[] { "Threshold", "PublicKeys", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.gogoproto.GogoProto.customname);
    registry.add(com.gogoproto.GogoProto.goprotoGetters);
    registry.add(com.gogoproto.GogoProto.moretags);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.gogoproto.GogoProto.getDescriptor();
    com.google.protobuf.AnyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
