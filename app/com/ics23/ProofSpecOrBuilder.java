// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: confio/proofs.proto

package com.ics23;

public interface ProofSpecOrBuilder extends
    // @@protoc_insertion_point(interface_extends:ics23.ProofSpec)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * any field in the ExistenceProof must be the same as in this spec.
   * except Prefix, which is just the first bytes of prefix (spec can be longer) 
   * </pre>
   *
   * <code>.ics23.LeafOp leaf_spec = 1 [json_name = "leafSpec"];</code>
   * @return Whether the leafSpec field is set.
   */
  boolean hasLeafSpec();
  /**
   * <pre>
   * any field in the ExistenceProof must be the same as in this spec.
   * except Prefix, which is just the first bytes of prefix (spec can be longer) 
   * </pre>
   *
   * <code>.ics23.LeafOp leaf_spec = 1 [json_name = "leafSpec"];</code>
   * @return The leafSpec.
   */
  com.ics23.LeafOp getLeafSpec();
  /**
   * <pre>
   * any field in the ExistenceProof must be the same as in this spec.
   * except Prefix, which is just the first bytes of prefix (spec can be longer) 
   * </pre>
   *
   * <code>.ics23.LeafOp leaf_spec = 1 [json_name = "leafSpec"];</code>
   */
  com.ics23.LeafOpOrBuilder getLeafSpecOrBuilder();

  /**
   * <code>.ics23.InnerSpec inner_spec = 2 [json_name = "innerSpec"];</code>
   * @return Whether the innerSpec field is set.
   */
  boolean hasInnerSpec();
  /**
   * <code>.ics23.InnerSpec inner_spec = 2 [json_name = "innerSpec"];</code>
   * @return The innerSpec.
   */
  com.ics23.InnerSpec getInnerSpec();
  /**
   * <code>.ics23.InnerSpec inner_spec = 2 [json_name = "innerSpec"];</code>
   */
  com.ics23.InnerSpecOrBuilder getInnerSpecOrBuilder();

  /**
   * <pre>
   * max_depth (if &gt; 0) is the maximum number of InnerOps allowed (mainly for fixed-depth tries)
   * </pre>
   *
   * <code>int32 max_depth = 3 [json_name = "maxDepth"];</code>
   * @return The maxDepth.
   */
  int getMaxDepth();

  /**
   * <pre>
   * min_depth (if &gt; 0) is the minimum number of InnerOps allowed (mainly for fixed-depth tries)
   * </pre>
   *
   * <code>int32 min_depth = 4 [json_name = "minDepth"];</code>
   * @return The minDepth.
   */
  int getMinDepth();
}
