// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: confio/proofs.proto

package com.ics23;

public final class ProofsProto {
  private ProofsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ics23_ExistenceProof_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ics23_ExistenceProof_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ics23_NonExistenceProof_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ics23_NonExistenceProof_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ics23_CommitmentProof_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ics23_CommitmentProof_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ics23_LeafOp_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ics23_LeafOp_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ics23_InnerOp_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ics23_InnerOp_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ics23_ProofSpec_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ics23_ProofSpec_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ics23_InnerSpec_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ics23_InnerSpec_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ics23_BatchProof_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ics23_BatchProof_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ics23_BatchEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ics23_BatchEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ics23_CompressedBatchProof_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ics23_CompressedBatchProof_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ics23_CompressedBatchEntry_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ics23_CompressedBatchEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ics23_CompressedExistenceProof_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ics23_CompressedExistenceProof_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ics23_CompressedNonExistenceProof_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ics23_CompressedNonExistenceProof_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023confio/proofs.proto\022\005ics23\"\177\n\016Existenc" +
      "eProof\022\020\n\003key\030\001 \001(\014R\003key\022\024\n\005value\030\002 \001(\014R" +
      "\005value\022!\n\004leaf\030\003 \001(\0132\r.ics23.LeafOpR\004lea" +
      "f\022\"\n\004path\030\004 \003(\0132\016.ics23.InnerOpR\004path\"}\n" +
      "\021NonExistenceProof\022\020\n\003key\030\001 \001(\014R\003key\022)\n\004" +
      "left\030\002 \001(\0132\025.ics23.ExistenceProofR\004left\022" +
      "+\n\005right\030\003 \001(\0132\025.ics23.ExistenceProofR\005r" +
      "ight\"\353\001\n\017CommitmentProof\022-\n\005exist\030\001 \001(\0132" +
      "\025.ics23.ExistenceProofH\000R\005exist\0226\n\010nonex" +
      "ist\030\002 \001(\0132\030.ics23.NonExistenceProofH\000R\010n" +
      "onexist\022)\n\005batch\030\003 \001(\0132\021.ics23.BatchProo" +
      "fH\000R\005batch\022=\n\ncompressed\030\004 \001(\0132\033.ics23.C" +
      "ompressedBatchProofH\000R\ncompressedB\007\n\005pro" +
      "of\"\320\001\n\006LeafOp\022!\n\004hash\030\001 \001(\0162\r.ics23.Hash" +
      "OpR\004hash\022.\n\013prehash_key\030\002 \001(\0162\r.ics23.Ha" +
      "shOpR\nprehashKey\0222\n\rprehash_value\030\003 \001(\0162" +
      "\r.ics23.HashOpR\014prehashValue\022\'\n\006length\030\004" +
      " \001(\0162\017.ics23.LengthOpR\006length\022\026\n\006prefix\030" +
      "\005 \001(\014R\006prefix\"\\\n\007InnerOp\022!\n\004hash\030\001 \001(\0162\r" +
      ".ics23.HashOpR\004hash\022\026\n\006prefix\030\002 \001(\014R\006pre" +
      "fix\022\026\n\006suffix\030\003 \001(\014R\006suffix\"\242\001\n\tProofSpe" +
      "c\022*\n\tleaf_spec\030\001 \001(\0132\r.ics23.LeafOpR\010lea" +
      "fSpec\022/\n\ninner_spec\030\002 \001(\0132\020.ics23.InnerS" +
      "pecR\tinnerSpec\022\033\n\tmax_depth\030\003 \001(\005R\010maxDe" +
      "pth\022\033\n\tmin_depth\030\004 \001(\005R\010minDepth\"\347\001\n\tInn" +
      "erSpec\022\037\n\013child_order\030\001 \003(\005R\nchildOrder\022" +
      "\035\n\nchild_size\030\002 \001(\005R\tchildSize\022*\n\021min_pr" +
      "efix_length\030\003 \001(\005R\017minPrefixLength\022*\n\021ma" +
      "x_prefix_length\030\004 \001(\005R\017maxPrefixLength\022\037" +
      "\n\013empty_child\030\005 \001(\014R\nemptyChild\022!\n\004hash\030" +
      "\006 \001(\0162\r.ics23.HashOpR\004hash\"9\n\nBatchProof" +
      "\022+\n\007entries\030\001 \003(\0132\021.ics23.BatchEntryR\007en" +
      "tries\"|\n\nBatchEntry\022-\n\005exist\030\001 \001(\0132\025.ics" +
      "23.ExistenceProofH\000R\005exist\0226\n\010nonexist\030\002" +
      " \001(\0132\030.ics23.NonExistenceProofH\000R\010nonexi" +
      "stB\007\n\005proof\"\202\001\n\024CompressedBatchProof\0225\n\007" +
      "entries\030\001 \003(\0132\033.ics23.CompressedBatchEnt" +
      "ryR\007entries\0223\n\rlookup_inners\030\002 \003(\0132\016.ics" +
      "23.InnerOpR\014lookupInners\"\232\001\n\024CompressedB" +
      "atchEntry\0227\n\005exist\030\001 \001(\0132\037.ics23.Compres" +
      "sedExistenceProofH\000R\005exist\022@\n\010nonexist\030\002" +
      " \001(\0132\".ics23.CompressedNonExistenceProof" +
      "H\000R\010nonexistB\007\n\005proof\"y\n\030CompressedExist" +
      "enceProof\022\020\n\003key\030\001 \001(\014R\003key\022\024\n\005value\030\002 \001" +
      "(\014R\005value\022!\n\004leaf\030\003 \001(\0132\r.ics23.LeafOpR\004" +
      "leaf\022\022\n\004path\030\004 \003(\005R\004path\"\233\001\n\033CompressedN" +
      "onExistenceProof\022\020\n\003key\030\001 \001(\014R\003key\0223\n\004le" +
      "ft\030\002 \001(\0132\037.ics23.CompressedExistenceProo" +
      "fR\004left\0225\n\005right\030\003 \001(\0132\037.ics23.Compresse" +
      "dExistenceProofR\005right*U\n\006HashOp\022\013\n\007NO_H" +
      "ASH\020\000\022\n\n\006SHA256\020\001\022\n\n\006SHA512\020\002\022\n\n\006KECCAK\020" +
      "\003\022\r\n\tRIPEMD160\020\004\022\013\n\007BITCOIN\020\005*\253\001\n\010Length" +
      "Op\022\r\n\tNO_PREFIX\020\000\022\r\n\tVAR_PROTO\020\001\022\013\n\007VAR_" +
      "RLP\020\002\022\017\n\013FIXED32_BIG\020\003\022\022\n\016FIXED32_LITTLE" +
      "\020\004\022\017\n\013FIXED64_BIG\020\005\022\022\n\016FIXED64_LITTLE\020\006\022" +
      "\024\n\020REQUIRE_32_BYTES\020\007\022\024\n\020REQUIRE_64_BYTE" +
      "S\020\010Bs\n\tcom.ics23B\013ProofsProtoP\001Z%github." +
      "com/AssetMantle/modules/confio\242\002\003IXX\252\002\005I" +
      "cs23\312\002\005Ics23\342\002\021Ics23\\GPBMetadata\352\002\005Ics23" +
      "b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_ics23_ExistenceProof_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ics23_ExistenceProof_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ics23_ExistenceProof_descriptor,
        new java.lang.String[] { "Key", "Value", "Leaf", "Path", });
    internal_static_ics23_NonExistenceProof_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ics23_NonExistenceProof_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ics23_NonExistenceProof_descriptor,
        new java.lang.String[] { "Key", "Left", "Right", });
    internal_static_ics23_CommitmentProof_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_ics23_CommitmentProof_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ics23_CommitmentProof_descriptor,
        new java.lang.String[] { "Exist", "Nonexist", "Batch", "Compressed", "Proof", });
    internal_static_ics23_LeafOp_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_ics23_LeafOp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ics23_LeafOp_descriptor,
        new java.lang.String[] { "Hash", "PrehashKey", "PrehashValue", "Length", "Prefix", });
    internal_static_ics23_InnerOp_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_ics23_InnerOp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ics23_InnerOp_descriptor,
        new java.lang.String[] { "Hash", "Prefix", "Suffix", });
    internal_static_ics23_ProofSpec_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_ics23_ProofSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ics23_ProofSpec_descriptor,
        new java.lang.String[] { "LeafSpec", "InnerSpec", "MaxDepth", "MinDepth", });
    internal_static_ics23_InnerSpec_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_ics23_InnerSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ics23_InnerSpec_descriptor,
        new java.lang.String[] { "ChildOrder", "ChildSize", "MinPrefixLength", "MaxPrefixLength", "EmptyChild", "Hash", });
    internal_static_ics23_BatchProof_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_ics23_BatchProof_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ics23_BatchProof_descriptor,
        new java.lang.String[] { "Entries", });
    internal_static_ics23_BatchEntry_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_ics23_BatchEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ics23_BatchEntry_descriptor,
        new java.lang.String[] { "Exist", "Nonexist", "Proof", });
    internal_static_ics23_CompressedBatchProof_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_ics23_CompressedBatchProof_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ics23_CompressedBatchProof_descriptor,
        new java.lang.String[] { "Entries", "LookupInners", });
    internal_static_ics23_CompressedBatchEntry_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_ics23_CompressedBatchEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ics23_CompressedBatchEntry_descriptor,
        new java.lang.String[] { "Exist", "Nonexist", "Proof", });
    internal_static_ics23_CompressedExistenceProof_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_ics23_CompressedExistenceProof_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ics23_CompressedExistenceProof_descriptor,
        new java.lang.String[] { "Key", "Value", "Leaf", "Path", });
    internal_static_ics23_CompressedNonExistenceProof_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_ics23_CompressedNonExistenceProof_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ics23_CompressedNonExistenceProof_descriptor,
        new java.lang.String[] { "Key", "Left", "Right", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
