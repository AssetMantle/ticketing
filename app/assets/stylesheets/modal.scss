@media (min-width: 500px) {
  .modal-dialog {
    max-width: 650px;
  }
}

@mixin setFont($type, $style, $weight, $size, $lineHeight, $color) {
  font-family: $type;
  font-style: $style;
  font-weight: $weight;
  font-size: $size;
  line-height: $lineHeight;
  color: $color;
}

// Common
.modal-backdrop.fade.show {
  opacity: 0;
}

@media only screen and (min-width: 10em) {
  .modal-overlay {
    align-items: center;
    justify-content: center;
    background-color: rgba(0, 0, 0, 0.6);
    opacity: 0;
    visibility: hidden;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    transition: opacity 0.6s cubic-bezier(0.55, 0, 0.1, 1), visibility 0.6s cubic-bezier(0.55, 0, 0.1, 1);
    z-index: 999;
    backdrop-filter: blur(5px);
  }
  .modal-overlay.active {
    opacity: 1;
    visibility: visible;
  }
  .modal.fade .modal-dialog {
    transition: transform 0.6s ease;
  }
}

#modal-content {
  padding: 32px;
  background-color: #21211E;
  border-radius: 10px;
  border: 2px solid #282826;
  height: fit-content;
}

.btn-close {
  background: none;
  color: #ffc033 !important;
  font-size: 45px;
  line-height: 0px;
  box-shadow: none !important;
}

.modal-header {
  border-bottom: none;
  padding: 0px;
}

.modal-body {
  padding: 0px;
}

.modal-title {
  @include setFont(var(--font-type-1), normal, 500, 28px, 34px, var(--dark));
}

.sub-heading {
  @include setFont(var(--font-type-2), normal, 400, 18px, 22px, var(--inactive-gray));
  margin-bottom: 32px;
}

.modal-footer {
  padding: 0px;
  border-top: none;
}

.link {
  @include setFont(var(--font-type-1), normal, 500, 14px, 17px, var(--dark));
  position: relative;
  text-transform: capitalize;

  &:hover {
    color: var(--dark);
  }

  &:before {
    content: '';
    position: absolute;
    width: 100%;
    height: 1px;
    background: currentColor;
    top: 100%;
    left: 0;
    transform-origin: 50% 100%;
    transition: clip-path 0.3s, transform 0.3s cubic-bezier(0.2, 1, 0.8, 1);
    clip-path: polygon(0% 0%, 0% 100%, 0 100%, 0 0, 100% 0, 100% 100%, 0 100%, 0 100%, 100% 100%, 100% 0%);
  }

  &:hover:before {
    color: var(--dark);
    transform: translate3d(0, 2px, 0) scale3d(1.0, 2, 1);
    clip-path: polygon(0% 0%, 0% 100%, 50% 100%, 50% 0, 50% 0, 50% 100%, 50% 100%, 0 100%, 100% 100%, 100% 0%);
  }
}

/* Header with Icon */
.header-with-icon .form-top .title-icon {
  margin-right: 5px;
}

.header-with-icon .form-top .title-text {
  @include setFont(var(--font-type-1), normal, 500, 28px, 34px, var(--dark));
  text-transform: capitalize;
  flex-grow: 2;
  margin-right: 20px;
}

.header-with-icon .form-sub-title {
  @include setFont(var(--font-type-2), normal, 400, 14px, 22px, var(--text-medium));
}

.header-with-icon .form-top .back-button-icon {
  height: 40px;
  width: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 20px;
  cursor: pointer;
}

.header-with-icon .form-top .back-button-icon:hover {
  background-color: var(--popup-stroke);
}

// Sign Up
.termsConditionMessage {
  @include setFont(var(--font-type-2), normal, 400, 12px, 14px, var(--mantle-off-white));
  margin-left: 6px;

  label {
    margin-right: 5px;
  }
}

.footerMessage {
  @include setFont(var(--font-type-2), normal, 400, 14px, 17px, var(--inactive-gray));
  text-align: left;

  span {
    margin-right: 5px;
  }

  .link {
    @include setFont(var(--font-type-2), normal, 500, 16px, 19px, var(--dark));
  }

  .errorMessage {
    color: var(--error);
  }
}

// Terms & Conditions
.termsConditionSubTitle {
  @include setFont(var(--font-type-2), normal, 400, 18px, 22px, var(--inactive-gray));
}

// Recovery Phrase
.form-copy-item {
  @include setFont(var(--font-type-2), normal, 700, 14px, 22px, var(--inactive-gray));
  text-transform: capitalize;
}

// Form Seed Box
.form-seed-box-list {
  gap: 8px;
}

.form-seed-box-list .form-seed-box {
  flex: 1 1 0;
}

.form-seed-box-list .form-seed-box .form-seed-box-number {
  @include setFont(var(--font-type-2), normal, 500, 12px, 14px, var(--mantle-off-white));
  margin-left: 5px;
}

.form-seed-box-list .form-seed-box .form-seed-box-phrase {
  @include setFont(var(--font-type-2), normal, 400, 14px, 14px, var(--mantle-off-white));
  text-align: center;
  background: transparent;
  width: 100%;
  border: 1px solid var(--inactive-gray);
  box-sizing: border-box;
  border-radius: 8px;
  padding: 9px 0;
  outline: none;
}

.form-seed-box-list .form-seed-box .form-seed-box-phrase.disable {
  -webkit-touch-callout: none; /* iOS Safari */
  -webkit-user-select: none; /* Safari */
  -khtml-user-select: none; /* Konqueror HTML */
  -moz-user-select: none; /* Old versions of Firefox */
  -ms-user-select: none; /* Internet Explorer/Edge */
  user-select: none;
  pointer-events: none;
}

.form-seed-box-list .form-seed-box .form-seed-box-phrase:focus-within {
  border-color: var(--dark);
}

.form-seed-box-list .form-seed-box .form-seed-box-phrase input {
  @include setFont(var(--font-type-2), normal, 400, 16px, 14px, var(--mantle-off-white));
  height: 100%;
  width: 100%;
  border-radius: 8px;
  border: none;
  outline: none;
  background-color: transparent;
  text-align: center;
}

.form-seed-box-list .form-seed-box .form-seed-box-phrase input:focus {
  color: var(--dark);
}

.form-information-message {
  gap: 5px;
}

.form-information-message .form-information-icon img {
  width: 18px;
}

.form-information-message .form-information-text {
  @include setFont(var(--font-type-2), normal, 400, 14px, 17px, var(--mantle-off-white));
}

/* Form Heading */
.form-heading {
  @include setFont(var(--font-type-2), normal, 600, 18px, 22px, var(--inactive-gray));
  margin-top: 32px;
}

/* Form Bullet List*/
.form-bullet-list {
  margin: 16px 25px;
}

.form-bullet-list ul {
  @include setFont(var(--font-type-2), normal, 400, 14px, 17px, var(--inactive-gray));
  list-style: disc;
}

.form-bullet-list ul li {
  margin: 16px 0;
}

// Successful Modal
.form-success-icon {
  flex-grow: 2;
  padding-left: 40px;
}

.header-success .form-success-message-heading {
  @include setFont(var(--font-type-1), normal, 600, 20px, 24px, var(--dark));
  text-transform: capitalize;
}

.header-success .form-success-message-sub-text {
  @include setFont(var(--font-type-2), normal, 400, 14px, 24px, var(--text-medium));
}

// Forgot Password
.forgotPasswordUsername {
  margin-bottom: 0px;
}

.errorMessage .errorContainer {
  @include setFont(var(--font-type-2), normal, 400, 14px, 17px, var(--error));
  gap: 4px;
}


// View Seed Phrase
.formSeedBoxList {
  .formSeedBox {
    .form-seed-box-number {
      @include setFont(var(--font-type-2), normal, 500, 12px, 14px, var(--mantle-off-white));
      margin-left: 5px;
    }

    .form-seed-box-phrase {
      @include setFont(var(--font-type-2), normal, 400, 14px, 14px, var(--mantle-off-white));
      text-align: center;
      background: transparent;
      width: 100%;
      border: 1px solid var(--inactive-gray);
      box-sizing: border-box;
      border-radius: 8px;
      padding: 9px 0;
      outline: none;

      &.disable {
        -webkit-touch-callout: none; /* iOS Safari */
        -webkit-user-select: none; /* Safari */
        -khtml-user-select: none; /* Konqueror HTML */
        -moz-user-select: none; /* Old versions of Firefox */
        -ms-user-select: none; /* Internet Explorer/Edge */
        user-select: none;
        pointer-events: none;
      }

      input {
        @include setFont(var(--font-type-2), normal, 400, 16px, 14px, var(--mantle-off-white));
        height: 100%;
        width: 100%;
        border-radius: 8px;
        border: none;
        outline: none;
        background-color: transparent;
        text-align: center;
      }
    }
  }
}

.modal-backdrop {
  z-index: 998;
}

// Custom Steper
.steperContainer {
  position: relative;
  margin-top: 16px;
  margin-bottom: 48px !important;

  .linearLine {
    height: 2px;
    background: var(--line);
    position: absolute;
    width: 100%;
    margin: 0 auto;
    left: 0;
    right: 0;
    top: 50%;
    z-index: 1;

    &:before {
      content: '';
      height: 8px;
      width: 8px;
      aspect-ratio: 1;
      border-radius: 50%;
      background-color: var(--button-text);
      position: absolute;
      top: 50%;
      left: 0;
      transform: translateY(-50%);
    }

    &:after {
      content: '';
      height: 8px;
      width: 8px;
      aspect-ratio: 1;
      border-radius: 50%;
      background-color: var(--button-text);
      position: absolute;
      top: 50%;
      right: 0;
      transform: translateY(-50%);
    }
  }

  ul {
    display: flex;
    justify-content: space-around;
    position: relative;
    z-index: 2;

    li {
      height: 20px;
      width: 20px;
      aspect-ratio: 1;
      background-color: var(--popup-bg);
      position: relative;
      border-radius: 50%;
      box-shadow: 0 0 0 2px var(--icon-white);

      &.active {
        background-color: var(--default);
        box-shadow: 0 0 0 3px var(--default), inset 0 0 0 3px var(--popup-bg);

        span {
          color: var(--default);
        }
      }

      &.visited {
        background-color: var(--icon-white);
        box-shadow: 0 0 0 3px var(--icon-white);

        span {
          color: var(--inactive-gray);
        }
      }

      span {
        color: var(--inactive-gray);
        position: absolute;
        top: 28px;
        left: 50%;
        transform: translateX(-50%);
        white-space: nowrap;
        font-size: 14px;
      }
    }
  }
}

// Property Modal
.propertyInfoContainer {
  .singleProperty {
    .propertyHeaderContainer {
      .propertyHeading {
        @include setFont(var(--font-type-2), normal, 600, 16px, 19px, var(--inactive-gray));
        text-transform: capitalize;
      }
      .propertyEdit{
        cursor: pointer;
      }
    }

    .propertyDetail {
      display: none;

      .propertyBox {
        background-color: var(--header-bg);
        border-radius: 16px;
        padding: 12px 20px;
        margin-top: 20px;

        &:first-of-type {
          margin-top: 16px;
        }

        .propertyTitle {
          @include setFont(var(--font-type-2), normal, 600, 16px, 19px, var(--inactive-gray));
          text-transform: capitalize;
        }

        .propertyBoxItem {
          display: grid;
          grid-template-columns: 1fr 2fr 1fr;

          .propertyBoxItemLabel {
            text-align: right;
            margin-right: 18px;
            display: flex;
            align-items: center;
            justify-content: end;
            @include setFont(var(--font-type-2), normal, 400, 14px, 17px, var(--inactive-gray));
          }

          .propertyBoxValue {
            display: flex;
            align-items: center;
            @include setFont(var(--font-type-2), normal, 400, 14px, 17px, var(--disable));

            .username-data {
              max-width: 350px;
            }
          }
        }
      }
    }
    .propertyIcon{
      height: 28px;
      width: 28px;
    }
  }

  .singlePropertyContainer{
    .addPropertyHeader{
      .title{
        @include setFont(var(--font-type-2), normal, 600, 16px, 19px, var(--inactive-gray));
        text-transform: capitalize;
      }
      i{
        cursor: pointer;
      }
    }
    .propertyAdvancedDetail{
      .propertyHeading{
        @include setFont(var(--font-type-2), normal, 700, 14px, 17px, var(--default));
        text-transform: capitalize;
      }
      .advancedDetailOption{
        display: none;
        .singleOption{
          height: 30px;
          .optionTitle{
            @include setFont(var(--font-type-2), normal, 700, 14px, 17px, var(--inactive-gray));
            text-transform: capitalize;
          }
          .options{
            display: flex;
            .buttonset{
              display: flex;
              input[type="radio"]{
                margin-right: 8px;

                &:checked,
                &:not(:checked) {
                  position: absolute;
                  left: -9999px;
                }
                &:checked + label,
                &:not(:checked) + label
                {
                  position: relative;
                  padding-left: 28px;
                  cursor: pointer;
                  line-height: 20px;
                  display: inline-block;
                  color: #666;
                }
                &:checked + label:before,
                &:not(:checked) + label:before {
                  content: '';
                  position: absolute;
                  left: 0;
                  top: 0;
                  width: 18px;
                  height: 18px;
                  border: 1px solid var(--default);
                  border-radius: 100%;
                  background: transparent;
                }
                &:checked + label:after,
                &:not(:checked) + label:after {
                  content: '';
                  width: 10px;
                  height: 10px;
                  background: var(--default);
                  position: absolute;
                  top: 4px;
                  left: 4px;
                  border-radius: 100%;
                  -webkit-transition: all 0.2s ease;
                  transition: all 0.2s ease;
                }
                &:not(:checked) + label:after {
                  opacity: 0;
                  -webkit-transform: scale(0);
                  transform: scale(0);
                }
                &:checked + label:after {
                  opacity: 1;
                  -webkit-transform: scale(1);
                  transform: scale(1);
                }
              }
              label{
                width: 120px;
                &:first-of-type {
                  margin-right: 80px;
                }
              }
            }
            .toggleButtonContainer{
              .toggleButtonLabel{
                display: none;
              }
            }
          }
        }
      }
    }
    .propertyCardView{
      .singleProperty {
        .propertyHeaderContainer {
          .propertyHeading {
            @include setFont(var(--font-type-2), normal, 600, 16px, 19px, var(--inactive-gray));
            text-transform: capitalize;
          }
        }

        .propertyDetail {
          display: block;

          .propertyBox {
            background-color: var(--header-bg);
            border-radius: 16px;
            padding: 12px 20px;
            margin-top: 20px;

            &:first-of-type {
              margin-top: 16px;
            }

            .propertyTitle {
              @include setFont(var(--font-type-2), normal, 600, 16px, 19px, var(--inactive-gray));
              text-transform: capitalize;
            }

            .propertyBoxItem {
              display: grid;
              grid-template-columns: 1fr 2fr 1fr;

              .propertyBoxItemLabel {
                text-align: right;
                margin-right: 18px;
                display: flex;
                align-items: center;
                justify-content: end;
                @include setFont(var(--font-type-2), normal, 400, 14px, 17px, var(--inactive-gray));
              }

              .propertyBoxValue {
                display: flex;
                align-items: center;
                @include setFont(var(--font-type-2), normal, 400, 14px, 17px, var(--disable));

                .username-data {
                  max-width: 350px;
                }
              }
            }
            i{
              cursor: pointer;
            }
          }
        }
        .propertyIcon{
          height: 28px;
          width: 28px;
          &.propertyIconMutability{
            background-image: url("../images/icon/immutableDisable.png");
            background-size: cover;
            &.active{
              background-image: url("../images/icon/mutableDisable.png");
            }
          }
          &.propertyIconVisibility{
            background-image: url("../images/icon/nonMetaDisable.png");
            background-size: cover;
            &.active{
              background-image: url("../images/icon/metaDisable.png");
            }
          }
          &.propertyIconRequirement{
            background-image: url("../images/icon/optionalDisable.png");
            background-size: cover;
            &.active{
              background-image: url("../images/icon/requiredDisable.png");
            }
          }
        }
      }
    }
  }
  .separator {
    height: 2px;
    width: 100%;
    background-color: var(--line);
    margin: 20px 0px;
  }
  .dropdownIcon {
    transition: transform 0.3s ease;
    cursor: pointer;

    &.active {
      transform: rotate(180deg);
    }
  }
}
.propertyModalButton{
  .form-secondary-button{
    display: none;
    &.active{
      display: block;
    }
  }
}

// Create NFT
.createNft{
  .createNftSelectCollection{
    @include setFont(var(--font-type-2), normal, 700, 14px, 17px, var(--inactive-gray));
    margin-bottom: 4px;
  }
}
.hashtagWrapper{
  &:where(.title, li, li i, .details){
    display: flex;
    align-items: center;
  }
  .content{
    label{
      @include setFont(var(--font-type-2), normal, 700, 14px, 17px, var(--inactive-gray));
    }
    ul{
      display: flex;
      flex-wrap: wrap;
      padding: calc(var(--size-bezel) * 2) 12px;
      border-radius: 8px;
      border: 1px solid var(--inactive-gray);
      li{
        @include setFont(var(--font-type-2), normal, 400, 12px, 14px, var(--dark));
        margin: 6px 6px;
        list-style: none;
        border-radius: 24px;
        background: rgba(242, 175, 19, 0.1);
        padding: 5px 12px 5px 12px;
        border: 1px solid var(--dark);
        i{
          height: 20px;
          width: 20px;
          margin-left: 8px;
          cursor: pointer;
          justify-content: center;
        }
      }
      input{
        background-color: transparent;
        @include setFont(var(--font-type-2), normal, 400, 14px, 17px, var(--mantle-off-white));
        border: none;
        outline: none;
        padding: calc(var(--size-bezel) * 1.5) 12px;
        flex: 1;
      }
    }
  }
  .details{
    @include setFont(var(--font-type-2), normal, 400, 14px, 17px, var(--mantle-off-white));
  }
}
#modalBackButton{
  cursor: pointer;
  margin-right: 16px;
}
.propertyTypeOption{
  .propertyType{
    display: none;
    &.active{
      display: block;
    }
  }
}
.fieldContainer{
  label{
    @include setFont(var(--font-type-2), normal, 400, 14px, 17px, var(--inactive-gray));
  }
}

.randomNFTSaleField{
  label{
    @include setFont(var(--font-type-2), normal, 700, 14px, 17px, var(--inactive-gray));
  }
  input{
    @include setFont(var(--font-type-2), normal, 400, 14px, 17px, var(--mantle-off-white));
    height: 36px;
    box-sizing: border-box;
    display: block;
    width: 100%;
    border: 1px solid var(--inactive-gray);
    padding: calc(var(--size-bezel) * 2) 12px;
    background: transparent;
    border-radius: var(--size-radius);
    letter-spacing: 1px;
    outline: none !important;
    box-shadow: none !important;
    &:focus{
      border-color: var(--dark);
      background-color: transparent;
      color: var(--mantle-off-white);
      +.input-group-text{
        border-color: var(--dark);
      }
    }
    &::placeholder{
      color: var(--inactive-gray);
    }
  }
  .input-group-text{
    @include setFont(var(--font-type-2), normal, 400, 14px, 17px, var(--default));
    height: 36px;
    padding: calc(var(--size-bezel) * 2) 12px;
    background-color: var(--card-dark);
    border-color: var(--inactive-gray);
  }
}

.hideLabelField{
  label{
    display: none !important;
  }
  input{
    display: none !important;
  }
}

// Create Collection
.capabilityInfoContainer{
  .capabilityAdvancedDetail{
    .bodyHeading{
      @include setFont(var(--font-type-2), normal, 700, 14px, 17px, var(--default));
      text-transform: capitalize;
    }
    .singleCapability{
      .innerSeparator{
        margin: 6px 0px;
      }
      .capabilityHeader,
      .singleOption{
        height: 30px;
        .optionTitle{
          @include setFont(var(--font-type-2), normal, 700, 14px, 17px, var(--inactive-gray));
          text-transform: capitalize;
        }
        .options{
          display: flex;
          padding: 0;
          .buttonset{
            display: flex;
            input[type="radio"]{
              //margin-right: 4px;

              &:checked,
              &:not(:checked) {
                position: absolute;
                left: -9999px;
              }
              &:checked + label,
              &:not(:checked) + label
              {
                position: relative;
                padding-left: 28px;
                cursor: pointer;
                line-height: 20px;
                display: inline-block;
                color: #666;
              }
              &:checked + label:before,
              &:not(:checked) + label:before {
                content: '';
                position: absolute;
                left: 0;
                top: 0;
                width: 18px;
                height: 18px;
                border: 1px solid var(--default);
                border-radius: 100%;
                background: transparent;
              }
              &:checked + label:after,
              &:not(:checked) + label:after {
                content: '';
                width: 10px;
                height: 10px;
                background: var(--default);
                position: absolute;
                top: 4px;
                left: 4px;
                border-radius: 100%;
                -webkit-transition: all 0.2s ease;
                transition: all 0.2s ease;
              }
              &:not(:checked) + label:after {
                opacity: 0;
                -webkit-transform: scale(0);
                transform: scale(0);
              }
              &:checked + label:after {
                opacity: 1;
                -webkit-transform: scale(1);
                transform: scale(1);
              }
            }
            label{
              width: 120px;
              &:first-of-type {
                margin-right: 80px;
              }
            }
          }
          .toggleButtonContainer{
            .toggleButtonLabel{
              display: none;
            }
          }
        }
      }
      .propertyAdvancedDetail{
        padding: 0 4px;
        .advancedDetailOption{
          display: none;
        }
        .dropdownIcon {
          transition: transform 0.3s ease;
          cursor: pointer;
          &.active {
            transform: rotate(180deg);
          }
        }
      }
    }
  }
}